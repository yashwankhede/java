import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ArrayList;
import java.util.List;

public class SearchEngine {
    private final String folderPath;
    private final String searchString;

    public SearchEngine(String folderPath, String searchString) {
        this.folderPath = folderPath;
        this.searchString = searchString;
    }

    public void search() {
        File folder = new File(folderPath);
        if (!folder.isDirectory()) {
            System.out.println("The specified path is not a directory.");
            return;
        }

        File[] files = folder.listFiles();
        List<SearchThread> threads = new ArrayList<>();

        for (File file : files) {
            if (file.isFile() && file.getName().endsWith(".txt")) {
                SearchThread thread = new SearchThread(file, searchString);
                threads.add(thread);
                thread.start();
            }
        }

        for (SearchThread thread : threads) {
            try {
                thread.join();
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }

    public static void main(String[] args) {
        SearchEngine searchEngine = new SearchEngine(".", "hello");
        searchEngine.search();
    }

    private static class SearchThread extends Thread {
        private final File file;
        private final String searchString;

        public SearchThread(File file, String searchString) {
            this.file = file;
            this.searchString = searchString;
        }

        @Override
        public void run() {
            try (BufferedReader reader = new BufferedReader(new FileReader(file))) {
                String line;
                int lineNumber = 0;

                while ((line = reader.readLine()) != null) {
                    lineNumber++;
                    if (line.contains(searchString)) {
                        System.out.printf("%s:%d - %s\n", file.getName(), lineNumber, line);
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }
}
